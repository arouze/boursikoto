{% extends 'base.html.twig' %}

{% block body %}

    <div>
        <form action="" method="POST">
            <p>
                <label for="year">Ann√©e</label>
                <input type="text" name="year" id="year" value="{% if routeParams['year'] is defined %}{{ routeParams['year'] }}{% endif %}" />
                <label for="month">Mois</label>
                <input type="text" name="month" id="month" value="{% if routeParams['month'] is defined %}{{ routeParams['month'] }}{% endif %}" />
                <label for="day">Jour</label>
                <input type="text" name="day" id="day"  value="{% if routeParams['day'] is defined %}{{ routeParams['day'] }}{% endif %}" />
                <label for="hour">Heure</label>
                <input type="text" name="hour" id="hour"  value="{% if routeParams['hour'] is defined %}{{ routeParams['hour'] }}{% endif %}" />

                <label>Regrouper</label>
                <select name="group_by">
                    <option value="YEAR" {% if group_by == 'YEAR' %}selected="selected"{% endif %}>YEAR</option>
                    <option value="MONTH" {% if group_by == 'MONTH' %}selected="selected"{% endif %}>MONTH</option>
                    <option value="DAY" {% if group_by == 'DAY' %}selected="selected"{% endif %}>DAY</option>
                    <option value="HOUR" {% if group_by == 'HOUR' %}selected="selected"{% endif %}>HOUR</option>
                </select>
                <button type="submit">Afficher</button>
            </p>
        </form>


        <div>
            <div id="chartdiv" style="width: 100%; height: 400px;"></div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script src="/assets/js/axios.min.js"></script>
    <script src="/assets/js/amcharts.js"></script>
    <script src="/assets/js/serial.js"></script>
    <script>
        getMaxValue = function(data) {
            value = 0;

            for (let i = 0; i < data.length; i++) {
                if ((data[i].value * 1) > value) {
                    value = data[i].value;
                }
            }

            return value;
        };

        axios.get('{{ url(route, routeParams) }}?groupBy={{ group_by }}')
            .then((response) => {
                var chart = AmCharts.makeChart("chartdiv", {
                    "type": "serial",
                    "theme": "dark",
                    "dataDateFormat": "YYYY-MM-DD JJ:NN:SS",
                    "dataProvider": response.data,
                    "valueAxes": [{
                        "maximum": getMaxValue(response.data),
                        "minimum": 0,
                        "axisAlpha": 0,
                        "guides": []
                    }],
                    "graphs": [{
                        "bullet": "round",
                        "dashLength": 4,
                        "valueField": "value"
                    }],
                    "chartCursor": {
                        "cursorAlpha": 0,
                        "zoomable":false,
                        "valueZoomable":true
                    },
                    "categoryField": "date",
                    "categoryAxis": {
                        "minPeriod": "hh",
                        "parseDates": true
                    },
                    "valueScrollbar":{

                    }
                });
            });
    </script>

{% endblock %}
